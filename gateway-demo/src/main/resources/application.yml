server:
  port: 8088
spring:
  application:
    name: api-gateway
  cloud:
    # gateway的配置
    gateway:
      # 路由规则
      routes:
        - id: order_route  # 路由的唯一标识，路由到order
          uri: lb://order-service  # 需要转发的地址，整合 nacos 使用服务名即可，lb: 使用nacos中的本地负载均衡策略
          #断言规则 用于路由规则的匹配
          predicates:
             - Path=/order/**
#            - Path=/order-serv/**
            # http://api-gateway/order-service/order/add 路由到↓
            # http://order-serv/order-service/order/add
#            - CheckName=mumu
#          filters:
#            - StripPrefix=1  # 转发之前去掉第一层路径，得到最终路径
#            - CheckName=mumu
            # http://order-service/order/add
      # 请求跨域
      globalcors:
        cors-configurations:
          '[/**]': # 允许跨域访问的资源
            allowedOrigins: "*" # 允许的跨域来源
            allowedMethods:
              - GET
              - POST

    nacos:
      server-addr: 127.0.0.1:8850
      discovery:
        username: nacos
        password: nacos

    sentinel:
      transport:
        dashboard: 127.0.0.1:8090

       # 使用配置文件的方式配置限流异常处理
#      scg:
#        fallback:
#          mode: response
#          response-body: "{code: '998', message: '限流了 - 来自配置文件'}"