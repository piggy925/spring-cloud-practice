server:
  port: 8020

logging:
  # 将 level 设为 debug 会对全局生效
  level:
    # 仅将指定包设为 debug
    com.mumu.order.feign: debug

spring:
  application:
    # 服务名
    name: order-service
  cloud:
    sentinel:
      transport:
        dashboard: 127.0.0.1:8090
      # 防止默认将调用链路收敛
      web-context-unify: false
      datasource:
        flow-rule: # 这个可以名字自定义
          nacos:
            server-addr: 127.0.0.1:8850 # Nacos Server 地址
            username: nacos # Nacos Server 用户名密码
            password: nacos
            dataId: order-service-sentinal-config # Nacos 中创建配置文件的 data id
            dataType: json # 配置文件的类型（默认是 json）
            rule-type: flow # 指明是那种规则（如流控、降级、热点参数等）的配置信息
            # 此外还可以设置 namespace、group 等
    nacos:
      server-addr: 127.0.0.1:8850 # Nacos Server 地址
      discovery:
        username: nacos # Nacos Server 用户名密码
        password: nacos
        namespace: public # 命名空间：用于隔离不同的服务实例（如开发环境、生产环境），默认为 public
        # group: 分组，默认为 DEFAULT_GROUP, 提供更细粒度的相同特征服务的归类分组管理
        ephemeral: true # 是否为临时实例, 默认为true。设为 false 表示为永久实例：即使宕机，也不会删除该实例
        # service: 服务名，默认取${spring.application.name}
        # weight: 权重，通常结合负载均衡策略使用。权重越大，分配到的流量越大。

ribbon:
  eager-load:
    # 开启饥饿加载
    enabled: true
    # 指定需要饥饿加载的服务名（要调用的服务名），多个服务使用逗号分隔
    clients: stock-service

stock-service: # 被调用的微服务名
  ribbon:
    # 指定负载均衡策略
    NFLoadBalancerRuleClassName: com.mumu.ribbon.rule.CustomRule

feign:
  client:
    config:
      stock-service:
        loggerLevel: BASIC
        # 启用 feign 原生注解
        # contract: feign.Contract.Default
        # 连接超时时间
        connectTimeout: 3000
        # 请求处理超时时间
        readTimeout: 10000
        requestInterceptors[0]: com.mumu.order.interceptor.feign.CustomFeignInterceptor
  sentinel:
    # 启用 feign 对 sentinel 的支持
    enabled: true